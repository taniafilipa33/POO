#BlueJ class context
comment0.target=Aluguer
comment0.text=\n\ Classe\ Aluguer\ onde\ s\u00E3o\ efetuados\ alugueres\ e\ os\ seus\ m\u00E9todos\ correspondentes\n
comment1.params=
comment1.target=Aluguer()
comment1.text=\n\ Construtores\ da\ classe\ ,\ clone()\n
comment10.params=listVeiculo
comment10.target=Veiculo\ carroP(java.util.Map)
comment10.text=\nMetodo\ que\ devolve\ o\ carro\ ais\ proximo\ do\ cliente\n\ @param\ listVeiculo\n\ @return\ \n
comment11.params=op\ listVeiculo
comment11.target=Veiculo\ carroA(int,\ java.util.Map)
comment11.text=\n\ Metodo\ que\ verifica\ se\ a\ autonomia\ \u00E9\ suficiente\ para\ a\ viajem\n\ @param\ op\n\ @param\ listVeiculo\n\ @return\ \n
comment12.params=mat\ listVeiculo
comment12.target=Veiculo\ carroE(java.lang.String,\ java.util.Map)
comment12.text=\n\ Metodo\ que\ devolve\ um\ determinado\ veiculo\ em\ especifico.\ Este\ \u00E9\ procurado\ atraves\ da\ correspondencia\ da\ matricula.\n\ Tensta\ se\ ele\ existe\n\ @param\ mat\n\ @param\ listVeiculo\n\ @return\ \n
comment13.params=
comment13.target=java.lang.String\ getCliente()
comment13.text=\n\ Gets\ e\ Sets\ dos\ Atributos\ da\ Classe\n\ @return\ \n
comment14.params=cliente
comment14.target=void\ setCliente(java.lang.String)
comment15.params=
comment15.target=java.lang.String\ getProprietario()
comment16.params=proprietario
comment16.target=void\ setProprietario(java.lang.String)
comment17.params=
comment17.target=java.lang.String\ getCarro()
comment18.params=
comment18.target=java.lang.String\ getTemp()
comment19.params=
comment19.target=java.lang.Double\ getDPe()
comment2.params=cliente\ inicio\ fim
comment2.target=Aluguer(java.lang.String,\ java.awt.geom.Point2D.Double,\ java.awt.geom.Point2D.Double)
comment20.params=carro
comment20.target=void\ setCarro(java.lang.String)
comment21.params=
comment21.target=java.lang.Double\ getDistancia()
comment22.params=distancia
comment22.target=void\ setDistancia(java.lang.Double)
comment23.params=
comment23.target=java.lang.Double\ getPreco()
comment24.params=preco
comment24.target=void\ setPreco(java.lang.Double)
comment25.params=
comment25.target=java.lang.Double\ getDuracao()
comment26.params=duracao
comment26.target=void\ setDuracao(java.lang.Double)
comment27.params=
comment27.target=java.awt.geom.Point2D.Double\ getFim()
comment28.params=fim
comment28.target=void\ setFim(java.awt.geom.Point2D.Double)
comment29.params=
comment29.target=java.awt.geom.Point2D.Double\ getInicio()
comment3.params=a
comment3.target=Aluguer(Aluguer)
comment30.params=inicio
comment30.target=void\ setInicio(java.awt.geom.Point2D.Double)
comment31.params=listVeiculo
comment31.target=java.util.List\ achaCG(java.util.Map)
comment31.text=\n\ verifica\ se\ um\ determinado\ carro\ est\u00E1\ no\ sistema.\ Metodos\ diferentes\ para\ carro\ a\ gasolina,\ eletrico\ e\ hibrido,\ respetivamente\n
comment32.params=listVeiculo
comment32.target=java.util.List\ achaCE(java.util.Map)
comment33.params=listVeiculo
comment33.target=java.util.List\ achaCH(java.util.Map)
comment4.params=
comment4.target=Aluguer\ clone()
comment5.params=i\ f
comment5.target=double\ distancia(java.awt.geom.Point2D.Double,\ java.awt.geom.Point2D.Double)
comment5.text=\n\ Distancia\ entre\ dois\ pontos\n\n\ @param\ i\n\ @param\ f\n\ @return\ \n
comment6.params=velocidade
comment6.target=double\ tempoViagem(double)
comment6.text=\n\ Calculo\ do\ tempo\ de\ viagem\ dependendo\ em\ variados\ fatores\ devidos\ da\ metereologia\n\ @param\ velocidade\n\ @return\ \n
comment7.params=i\ f\ precoC
comment7.target=double\ precoViagem(java.awt.geom.Point2D.Double,\ java.awt.geom.Point2D.Double,\ java.lang.Double)
comment7.text=\n\ pre\u00E7o\ da\ viagem\ dependendo\ da\ distancia\ e\ do\ custo\ do\ veiculo\n\ @param\ i\n\ @param\ f\n\ @param\ precoC\n\ @return\ \n
comment8.params=listVeiculo
comment8.target=Veiculo\ carroB(java.util.Map)
comment8.text=\n\ Metodo\ que\ devolve\ o\ carro\ mais\ barato\ dependento\ do\ seu\ tipo\ (gasolina,\ hibrido,\ eletrico)\n\ @param\ listVeiculo\n\ @return\ \n
comment9.params=dist\ listVeiculo
comment9.target=Veiculo\ carroBD(int,\ java.util.Map)
comment9.text=\n\ Devolve\ o\ carro\ mais\ barato\ dentro\ de\ uma\ determinada\ distancia\n\ @param\ dist\n\ @param\ listVeiculo\n\ @return\ \n
numComments=34
