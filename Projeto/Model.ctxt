#BlueJ class context
comment0.target=Model
comment0.text=\n\ Classe\ model\n
comment1.params=
comment1.target=void\ initModel()
comment1.text=\n\ Faz\ leitura\ do\ ficheiro\ incial\ e\ guarda-os\ no\ sistema\n
comment10.params=cli\ fim
comment10.target=Aluguer\ carroP(Cliente,\ java.awt.geom.Point2D.Double)
comment10.text=\n\ Procura\ carro\ mais\ perto\ e\ verifica\ se\ encontrou\n\ @param\ cli\n\ @param\ fim\n\ @return\n\ @throws\ ElemNotFoundException\n
comment11.params=op\ cli\ fim
comment11.target=Aluguer\ carroA(int,\ Cliente,\ java.awt.geom.Point2D.Double)
comment11.text=\n\ Procura\ carro\ pelo\ tipo\ de\ autonomia\ e\ verifica\ se\ encontrou\n\ @param\ op\n\ @param\ cli\n\ @param\ fim\n\ @return\n\ @throws\ ElemNotFoundException\n
comment12.params=mat\ cli\ fim
comment12.target=Aluguer\ carroE(java.lang.String,\ Cliente,\ java.awt.geom.Point2D.Double)
comment12.text=\n\ Procura\ carro\ especifico\ para\ fazer\ viagem\ e\ verifica\ se\ encontrou\n\ @param\ mat\n\ @param\ cli\n\ @param\ fim\n\ @return\n\ @throws\ ElemNotFoundException\n
comment13.params=prop
comment13.target=void\ aceitarAluguer(Proprietario)
comment13.text=\n\ Metodo\ que\ permite\ o\ proprietario\ aceitar\ ou\ nao\ um\ aluguer\ pedido\n\ @param\ prop\n
comment14.params=a
comment14.target=java.lang.String\ solicitaA(Aluguer)
comment14.text=\n\ Envia\ um\ aluguer\ para\ o\ respetivo\ proprietario\n\ @param\ a\n\ @return\n
comment15.params=
comment15.target=void\ distribuiClassif()
comment15.text=\n\ Adiciona\ classifica\u00E7\u00F5es\n
comment16.params=matC\ d
comment16.target=void\ seeAutonomia(java.lang.String,\ double)
comment16.text=\n\ Abastece\ um\ veiculo\n\ @param\ matC\n\ @param\ d\n
comment17.params=i\ f
comment17.target=double\ distancia(java.awt.geom.Point2D.Double,\ java.awt.geom.Point2D.Double)
comment17.text=\n\ Calcula\ distancia\ entre\ dois\ pontos\n\ @param\ i\n\ @param\ f\n\ @return\n
comment18.params=
comment18.target=java.util.Map\ getListVeiculo()
comment18.text=\n\ get\n\ @return\n
comment19.params=
comment19.target=java.util.Set\ rankingKms()
comment19.text=\n\ Set\n\ @return\n
comment2.params=
comment2.target=void\ fazAlugueres()
comment2.text=\n\ Faz\ os\ alugueres\ do\ ficheiro\n
comment20.params=matricula\ preco\ p\ ind
comment20.target=void\ alteraPreco(java.lang.String,\ java.lang.Double,\ java.lang.String,\ int)
comment20.text=\n\ altera\ um\ pre\u00E7o\ de\ um\ carro\n\ @param\ matricula\n\ @param\ preco\n\ @param\ p\n\ @param\ ind\n
comment21.params=
comment21.target=java.util.Set\ top10()
comment21.text=\n\ Devolve\ a\ lista\ do\ top\ 10\ cliente\ que\ mais\ km\ fizeram\n\ @return\n
comment22.params=
comment22.target=java.util.Set\ top102()
comment22.text=\n\ devolve\ a\ lista\ dos\ top\ 10\ clientes\ que\ mais\ alugueres\ efetuaram\n\ @return\n
comment3.params=mat
comment3.target=java.lang.String\ achaProp(java.lang.String)
comment3.text=\n\ Metodo\ que\ procura\ o\ proprietario\ \ no\ sistema\n\ @param\ mat\n\ @return\n
comment4.params=email\ pass
comment4.target=Utilizador\ iniciarSessao(java.lang.String,\ java.lang.String)
comment4.text=\n\ Faz\ o\ login\ de\ um\ utilizador,\ verifica\ a\ sua\ existencia\ e\ v\u00EA\ se\ a\ password\ est\u00E1\ correta,\ caso\ contrario\ devolve\ as\ suas\ Exceptions\ correspondentes\n\ @param\ email\n\ @param\ pass\n\ @return\n\ @throws\ PasswordErradaException\n\ @throws\ ElemNotFoundException\n
comment5.params=nome\ nif\ email\ morada\ x\ y\ pass
comment5.target=void\ addCli(java.lang.String,\ java.lang.String,\ java.lang.String,\ java.lang.String,\ double,\ double,\ java.lang.String)
comment5.text=\n\ Adiciona\ um\ novo\ cliente\ ao\ sistema\ se\ este\ j\u00E1\ n\u00E3o\ exixtir\ neste.\ Compara\ pelo\ nif\n\ @param\ nome\n\ @param\ nif\n\ @param\ email\n\ @param\ morada\n\ @param\ x\n\ @param\ y\n\ @param\ pass\n\ @throws\ ElemJaExisteException\n
comment6.params=nome\ nif\ email\ morada\ pass
comment6.target=void\ addProp(java.lang.String,\ java.lang.String,\ java.lang.String,\ java.lang.String,\ java.lang.String)
comment6.text=\n\ Adiciona\ um\ novo\ proprietario\ ao\ sistema\ se\ este\ j\u00E1\ n\u00E3o\ exixtir\ neste.\ Compara\ pelo\ nif\n\ @param\ nome\n\ @param\ nif\n\ @param\ email\n\ @param\ morada\n\ @param\ pass\n\ @throws\ ElemJaExisteException\n
comment7.params=opcao\ marca\ matricula\ velocidade\ preco\ x\ y\ autonomia\ consumo\ prop
comment7.target=void\ addCarro(int,\ java.lang.String,\ java.lang.String,\ double,\ double,\ double,\ double,\ double,\ double,\ java.lang.String)
comment7.text=\n\ Adiciona\ um\ novo\ carro\ ao\ sistema\ se\ este\ j\u00E1\ n\u00E3o\ existir.\ Verifica\ pela\ matricula\n\ @param\ opcao\n\ @param\ marca\n\ @param\ matricula\n\ @param\ velocidade\n\ @param\ preco\n\ @param\ x\n\ @param\ y\n\ @param\ autonomia\n\ @param\ consumo\n\ @param\ prop\n\ @throws\ ElemJaExisteException\n
comment8.params=cli\ fim
comment8.target=Aluguer\ carroB(Cliente,\ java.awt.geom.Point2D.Double)
comment8.text=\n\ Procura\ carro\ com\ pre\u00E7o\ mais\ baixo\ e\ verifica\ se\ encontrou\n\ @param\ cli\n\ @param\ fim\n\ @return\n\ @throws\ ElemNotFoundException\n
comment9.params=cli\ fim\ dist
comment9.target=Aluguer\ carroBD(Cliente,\ java.awt.geom.Point2D.Double,\ int)
comment9.text=\n\ Procura\ carro\ com\ o\ pre\u00E7o\ mais\ baixo\ numa\ determinada\ distancia\ e\ verifica\ se\ encontrou\n\ @param\ cli\n\ @param\ fim\n\ @param\ dist\n\ @return\n\ @throws\ ElemNotFoundException\n
numComments=23
